openapi: 3.0.0
info:
  title: Azula API
  version: 1.0.0
  description: Enhanced OpenAPI documentation for Azula eCommerce API
servers:
  - url: https://azula-api.onrender.com/api/v1

paths:
  /products:
    get:
      summary: Get all products
      tags: [products]
      parameters:
        - name: category
          in: query
          required: false
          schema:
            type: string
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Products retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

    post:
      summary: Create a new product
      tags: [products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

  /products/{productId}:
    get:
      summary: Get single product
      tags: [products]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

    patch:
      summary: Update a product
      tags: [products]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

    delete:
      summary: Delete a product
      tags: [products]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Product deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

  /authentication/signup:
    post:
      summary: Signup a new user
      tags: [authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: Signup successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

  /authentication/login:
    post:
      summary: Login user
      tags: [authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

  /authentication/forgetpassword:
    post:
      summary: Request password reset
      tags: [authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required: [email]
      responses:
        "200":
          description: Email sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

  /authentication/resetpassword:
    post:
      summary: Reset password
      tags: [authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
              required: [token, newPassword]
      responses:
        "200":
          description: Password reset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

  /users:
    get:
      summary: Get all users
      tags: [users]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Users retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

  /users/{userId}:
    get:
      summary: Get user by ID
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

    delete:
      summary: Delete user
      tags: [users]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object

    ProductInput:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        priceCurrent:
          type: number
        priceOriginal:
          type: number
        keywords:
          type: string
        category:
          type: string
        countInStock:
          type: integer
        averageRating:
          type: number
        featured:
          type: boolean
        count:
          type: integer
        brand:
          type: string
      required:
        - name
        - description
        - priceCurrent
        - category
        - countInStock

    UserInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
      required:
        - email
        - password
